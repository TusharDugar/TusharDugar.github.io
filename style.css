/* style.css */

/* Basic Reset & Font */
:root {
    /* Sawad-inspired Color Palette */
    --bg-main: #000000; /* Solid black background from Sawad */
    --bg-section-card: #141414; /* Background for cards/sections (if added back) */
    --bg-profile-card: #FFFFFF; /* White background for the About Me card */
    --text-light: #F0F0F0; /* Light text for readability */
    --text-medium: #A0A0A0; /* Slightly darker light for secondary text */
    --text-dark-card: #000000; /* Black text for white card background */
    --text-medium-card: #4B4B4B; /* Dark gray for secondary text on white card */
    
    /* Accent Colors from Sawad */
    --accent-primary-sawad: #FF6B00; /* Main orange from Sawad */
    --accent-secondary-sawad: #00FFC2; /* Green accent from Sawad */
    
    /* Gradients */
    --gradient-hero-text: linear-gradient(90deg, #F0F0F0 0%, #A0A0A0 100%); /* Light gradient for hero text (for stats if added back) */
    --gradient-skills-front: linear-gradient(214.02deg, #EA5F5F 6.04%, #EEAA55 92.95%); /* Your specified orange gradient for skill cards (if added back) */

    --primary-heading-color: var(--text-light);
    --shadow-color-dark: rgba(0, 0, 0, 0.8); /* Darker shadow for depth */
    --shadow-color-subtle: rgba(0, 0, 0, 0.4); /* Subtle shadow for blending */
    --shadow-color-card-white: rgba(0,0,0,0.25); /* Specific shadow for white card */

    /* New colors for Tool Cards */
    --bg-tool-card: #1A1A1A; /* Dark background for tool cards */
    --tool-icon-bg: #F8F8F8; /* Adjusted to a slightly off-white for tool icons, closer to Sawad */
    --tool-name-color: var(--text-light); /* White for tool names */
    --tool-category-color: var(--text-medium); /* Gray for categories */

    /* New color for grey headings (re-introduced) */
    --text-sub-heading-grey: #666666; /* Distinct grey color for headings */

    /* Custom Gradients/Shadows (as used in the proposed CSS, now defined) */
    --bg-gradient-2: linear-gradient(145deg, #1A1A1A, #0A0A0A); /* Dark gradient for cube faces */
    --shadow-strong: 0 10px 25px rgba(0, 0, 0, 0.4); /* Stronger shadow for cube faces */
    --cube-service-title-color: #9CFF33; /* Specific green for cube service titles */
}

/* Universal Box-Sizing for easier layout management */
*, *::before, *::after {
  box-sizing: border-box;
}

body {
    margin: 0;
    font-family: 'Poppins', sans-serif;
    line-height: 1.6;
    color: var(--text-light);
    background-color: var(--bg-main); /* Base black background color */
    overflow-x: hidden;
    position: relative;
    scroll-behavior: smooth;
    min-height: 100vh;
}

/* New: Repeating Image Background Container */
.site-background-image {
    position: fixed;
    inset: 0; /* Shorthand for top:0; right:0; bottom:0; left:0; */
    z-index: -2; /* Above body's background-color, but below other overlays */
    pointer-events: none;
    opacity: 0.079; /* Adjusted opacity to 7.9% */
    background-image: url('./71976 (1).jpg'); /* Your specified image, explicit current directory */
    background-repeat: repeat; /* To stack */
    background-size: 400px auto; /* A tile size that creates visible repetition (roughly 4-5 times horizontally) */
}

/* NEW: Animated Color Gradient Overlay */
.background-color-gradient {
    position: fixed;
    inset: 0;
    z-index: -2; /* Above .site-background-image, below color glows */
    pointer-events: none;
    opacity: 0.05; /* Adjusted opacity to 5% */
    background-image: linear-gradient(-45deg,#ee7752,#e73c7e,#23a6d5,#23d5ab,#9600FF,#aebaf8,#bb73e0,#c1fcd3); /* New gradient */
    background-size: 400% 400%;
    animation: gradient 15s ease infinite; /* New animation */
}

/* Keyframes for the new animated colorful gradient */
@keyframes gradient {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}


/* Subtle Background Glowing Elements (Mimicking Sawad's subtle ambient light) */
/* These are the fixed, large, subtle color glows */
body::before, body::after {
    content: '';
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    filter: blur(400px); /* FURTHER INCREASED BLUR */
    opacity: 0.03; /* FURTHER DECREASED OPACITY */
    z-index: -1; /* Above .background-color-gradient, below html::before (grid) */
    pointer-events: none;
    will-change: transform, opacity;
}

body::before {
    width: 1300px; /* Larger */
    height: 1300px; /* Larger */
    background: radial-gradient(circle at center, var(--accent-primary-sawad) 0%, transparent 60%);
    animation: glow1 25s infinite alternate ease-in-out;
}

body::after {
    width: 1200px; /* Larger */
    height: 1200px; /* Larger */
    background: radial-gradient(circle at center, var(--accent-secondary-sawad) 0%, transparent 60%);
    animation: glow2 28s infinite alternate-reverse ease-in-out;
}

@keyframes glow1 {
    0% { transform: translate(-50%, -50%) scale(1); opacity: 0.03; }
    50% { transform: translate(-55%, -45%) scale(1.05); opacity: 0.05; } /* Adjusted max opacity */
    100% { transform: translate(-45%, -55%) scale(1); opacity: 0.03; }
}

@keyframes glow2 {
    0% { transform: translate(-50%, -50%) scale(1); opacity: 0.03; }
    50% { transform: translate(-45%, -55%) scale(1.03); opacity: 0.05; } /* Adjusted max opacity */
    100% { transform: translate(-55%, -45%) scale(1); opacity: 0.03; }
}


/* Animated Background Grid Pattern (now only the mask, gradient moved to new div) */
html::before {
    content: '';
    position: fixed;
    inset: 0;
    z-index: 0; /* Above color glows, below main content */
    pointer-events: none;
    opacity: 0.02; /* UPDATED: Increased opacity for better visibility */
    
    /* TWEAKED LINE THICKNESS & SEGMENTATION */
    mask-image:
        linear-gradient(to right, transparent 99.85%, white 0.15%), /* Even thinner vertical lines */
        linear-gradient(to bottom, transparent 99.85%, white 0.15%), /* Even thinner horizontal lines */
        linear-gradient(45deg, transparent 75%, white 75.02%, white 75.18%, transparent 75.2%), /* Extremely thin diagonal grid 1 */
        linear-gradient(-45deg, transparent 75%, white 75.02%, white 75.18%, transparent 75.2%); /* Extremely thin diagonal grid 2 */

    -webkit-mask-image:
        linear-gradient(to right, transparent 99.85%, white 0.15%),
        linear-gradient(to bottom, transparent 99.85%, white 0.15%),
        linear-gradient(45deg, transparent 75%, white 75.02%, white 75.18%, transparent 75.2%),
        linear-gradient(-45deg, transparent 75%, white 75.02%, white 75.18%, transparent 75.2%);

    /* ADJUSTED MASK SIZES for even denser pattern */
    mask-size: 40px 40px, 40px 40px, 40px 40px, 40px 40px; /* Adjusted from 50px */
    -webkit-mask-size: 40px 40px, 40px 40px, 40px 40px, 40px 40px;

    mask-repeat: repeat;
    -webkit-mask-repeat: repeat;
}

/* Mouse Follower Glow Element (new implementation for mouse tracking) */
.mouse-follower-glow {
    position: fixed;
    top: 0; /* Will be dynamically set by JS */
    left: 0; /* Will be dynamically set by JS */
    width: 80px; /* Size of the glow */
    height: 80px; /* Size of the glow */
    border-radius: 50%;
    background: radial-gradient(circle at center, rgba(255, 107, 0, 0.15) 0%, transparent 60%); /* Subtle orange glow */
    filter: blur(50px); /* Soft blur */
    z-index: 100; /* Ensure it's above all content */
    pointer-events: none; /* Crucial so it doesn't block clicks/interactions */
    /* Add a small transition for smoothness when mouse moves */
    transition: transform 0.1s ease-out; /* Smooth transition for position updates */
    will-change: transform; /* Performance hint */
}


/* Global Section Styling */
.section {
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
  padding: 80px 40px; /* Reduced from 200px for tighter spacing */
}

/* Reveal Animation Base (Applied to other sections, not #services or cube-container now) */
.reveal-item {
    opacity: 0;
    transform: translateY(40px);
    transition: opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1), transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform, opacity;
}
.reveal-item.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Stagger Parent (for elements like About section) */
.reveal-parent {
    position: relative;
}

/* Stagger Child (for elements inside About section) */
.reveal-child {
    opacity: 0;
    transform: translateY(20px); /* Reduced from 60px to prevent clipping by overflow:hidden parents */
    transition: opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1), transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform, opacity;
}
.reveal-child.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Stagger Container (for elements like Tools/Contact) */
.reveal-stagger-container {
    position: relative;
}

/* Stagger Item (for elements inside Tools/Contact containers) */
.reveal-stagger {
    opacity: 0;
    transform: translateY(60px);
    transition: opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1), transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform, opacity;
}
.reveal-stagger.visible {
    opacity: 1;
    transform: translateY(0);
}


/* Main Layout Container */
.main-layout-container {
    display: flex;
    justify-content: center; /* Center the entire two-column layout */
    max-width: 1920px; /* Overall max width of the site */
    margin: 0 auto; /* Center the main layout container itself */
    padding: 0 60px; /* Overall padding for the site */
    min-height: 100vh;
    position: relative;
    z-index: 1;
    padding-top: 20px;
    gap: 60px; /* Gap between left and right columns */
}

/* Left Column Sticky Styling */
.left-column-sticky {
    flex-shrink: 0;
    flex-basis: 370px; /* Fixed width for the left column */
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center; /* Centers content horizontally within the column */
    justify-content: center; /* Centers content vertically within the column's height */
    text-align: center;
    z-index: 2;
    
    /* Default (Mobile/Tablet) positioning */
    position: relative;
    top: auto;
    transform: none; /* No vertical translate by default */
    margin: 50px auto 0 auto; /* Horizontally center as a block, push down a bit */
    height: auto; /* Content dictates height */
    padding-right: 0; /* Remove unnecessary padding */
}

/* Desktop-specific rules for left column (fixed and centrally aligned within its allocated space) */
@media (min-width: 1024px) {
    .main-layout-container {
        align-items: flex-start; /* Align to top to allow sticky to work properly */
    }
    .left-column-sticky {
        position: sticky; /* Make it sticky */
        top: 50%; /* Start sticky behavior from the middle of the viewport */
        transform: translateY(-50%); /* Adjust upwards by half its height for true vertical centering */
        height: calc(100vh - 100px); /* Give it a defined height so justify-content: center has room to work */
        margin: 0; /* Remove auto margins */
        align-self: flex-start; /* It needs to be flex-start in the parent for sticky to work correctly with top property */
    }
}


/* About Left Content (White Card) */
.about-left-content {
    background-color: var(--bg-profile-card);
    color: var(--text-dark-card);
    border-radius: 20px;
    padding: 30px 25px;
    box-shadow: 0 10px 30px var(--shadow-color-card-white);
    width: 100%;
    max-width: 370px;
    height: auto;
    box-sizing: border-box;

    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    position: relative;
    overflow: hidden;
}

/* Profile Image Container */
.profile-image-container {
    width: calc(100% + 50px);
    max-width: 420px;
    height: 200px;
    border-radius: 15px;
    overflow: hidden;
    margin-bottom: 25px;
    position: relative;
    transform: translateX(0);
    background-color: var(--accent-primary-sawad);
}
.profile-image-container .profile-photo {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center top;
    filter: brightness(0.01);
}

/* Main Name */
.about-left-content h3 {
    font-family: 'Poppins', sans-serif;
    font-size: 2.8em;
    font-weight: 700;
    color: var(--text-dark-card);
    margin-bottom: 20px;
    line-height: 1.1;
}

/* Fire Icon with connecting dashed lines */
.fire-icon-with-line {
    position: relative;
    width: 100%;
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 25px;
}

.fire-icon {
    background-color: var(--accent-primary-sawad);
    border-radius: 50%;
    padding: 8px;
    font-size: 1.1em;
    color: var(--text-light);
    box-shadow: 0 2px 8px rgba(0,0,0,0.5);
    z-index: 2;
    position: relative;
}

.fire-icon-with-line::before,
.fire-icon-with-line::after {
    content: '';
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    height: 2px;
    border-top: 2px dashed var(--accent-primary-sawad);
    z-index: 1;
}

.fire-icon-with-line::before {
    left: 0;
    width: calc(50% - 25px);
}

.fire-icon-with-line::after {
    right: 0;
    width: calc(50% - 25px);
}

/* Decorative background dashed lines */
.dashed-decoration {
    position: absolute;
    border: 2px dashed var(--accent-primary-sawad); /* Color set to orange */
    border-radius: 50%;
    box-sizing: border-box;
    pointer-events: none;
    z-index: 0;
}

.top-left-curve {
    width: 150px;
    height: 150px;
    top: -50px;
    left: -50px;
    /* FIXED: Flipped to show right and bottom borders, making it curve inwards */
    border-top-color: transparent; 
    border-left-color: transparent;
    transform: rotate(-10deg);
}

.bottom-right-curve {
    width: 150px;
    height: 150px;
    bottom: -50px;
    right: -50px;
    /* FIXED: Flipped to show top and left borders, making it curve inwards */
    border-bottom-color: transparent;
    border-right-color: transparent;
    transform: rotate(10deg);
}

/* Short Description */
.about-short-desc {
    text-align: center; /* Centrally aligned */
    line-height: 1.8; /* Better line spacing */
    word-spacing: 1px; /* Better word spacing */
    font-size: 0.9em;
    color: var(--text-medium-card);
    margin-bottom: 25px;
    padding: 0 5px;
    max-width: 90%;
}

/* Social Icons */
.about-social-icons {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-top: auto;
    padding-top: 10px;
}
.about-social-icons a {
    color: var(--accent-primary-sawad);
    font-size: 1.5em;
    transition: color 0.3s cubic-bezier(0.22, 1, 0.36, 1), transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
}
.about-social-icons a:hover {
    color: var(--accent-primary-sawad);
    transform: translateY(-2px) scale(1.05);
}


/* Right Column (Scrolling) */
.right-column-scroll {
    flex-grow: 1;
    padding-bottom: 100px;
    box-sizing: border-box;
    min-height: 150vh;
    padding-top: 50px;
    text-align: left;
    position: relative;
    z-index: 0;
}

/* Specific text alignment for elements within right-column-scroll */
.right-column-scroll h1,
.right-column-scroll h2,
.right-column-scroll p {
  margin-left: 0;
  margin-right: 0;
}

/* HERO TEXT ADJUSTMENTS */
.hero-heading {
    font-family: 'Poppins', sans-serif;
    font-size: 7.75em; /* UPDATED: Changed to 7.75em */
    line-height: 0.75em;
    font-weight: 900;
    margin-bottom: 20px;
    text-transform: uppercase;
    text-align: left;
    margin-left: 0;
    background: none;
    -webkit-background-clip: unset;
    background-clip: unset;
    -webkit-text-fill-color: unset;
    color: unset;
}
.hero-heading .crafting {
  color: #ffffff;
}

.hero-heading .digital {
  color: var(--text-sub-heading-grey); /* Applied specific sub-heading grey color */
}

/* HERO DESCRIPTION ADJUSTMENTS */
.hero-description {
    text-align: justify; /* Justify text */
    line-height: 1.8; /* Better line spacing */
    word-spacing: 1px; /* Better word spacing */
    font-size: 1em;
    margin-bottom: 40px; /* Adjust hero text spacing */
    max-width: 90%; /* Adjust hero text spacing */
    color: var(--text-medium);
}


/* Services Section Wrapper (for pinning) */
#services-pin-wrapper {
    /* Height will be set dynamically by GSAP in script.js */
    position: relative; 
    width: 100%;
}

/* Services Section Styles (Internal layout is now column, pinned via GSAP) */
.services-section {
    position: relative; /* Default state, GSAP will manage 'fixed' property */
    width: 100%;
    height: 100vh; /* Occupy full viewport height when active */
    display: flex; /* Changed to flex container */
    flex-direction: column; /* Stack heading and cube */
    align-items: stretch; /* IMPORTANT: Stretch items to fill available width (default behavior of align-items: stretch for flex-direction: column) */
    justify-content: flex-start; /* IMPORTANT: Align items to the top of the container */
    gap: 40px; /* Gap between heading and cube */
    max-width: 1200px; /* Max width of the overall section content */
    margin: 0 auto; /* Center the section horizontally */
    z-index: 2; 
    background-color: transparent; 
    padding: 100px 20px; /* Standard padding for the section */
    box-sizing: border-box;
    overflow: hidden; /* Important for containing 3D content */
    
    /* Initial state for GSAP animation (fade in and grow) */
    opacity: 0; 
    transform: scale(0.8); 
    visibility: hidden; /* Start hidden for controlled GSAP reveal */
}

/* Services Heading (now direct child of #services) */
.services-heading {
    font-family: 'Poppins', sans-serif; 
    font-size: clamp(2.5rem, 8vw, 8rem); 
    line-height: 0.75em;
    font-weight: 800;
    margin-bottom: 40px; /* IMPORTANT: Breathing space below heading */
    text-transform: uppercase;
    text-align: left; /* Keep left-aligned as per requirement */
    align-self: flex-start; /* IMPORTANT: Align to the start of the flex container's cross-axis */
    position: relative;
    z-index: 2; /* IMPORTANT: Ensure heading is above cube */
    padding: 0;
    width: 100%; /* Take full width to allow text-align: left */
    
    /* Initial state for GSAP animation */
    opacity: 0;
    transform: translateY(50px);
}
.services-heading .text-white { color: var(--text-light); display: block; } 
.services-heading .text-gray { color: var(--text-sub-heading-grey); display: block; } 

/* Cube Container (now direct child of #services) */
.cube-container {
    /* width and height will be explicitly set by JS/GSAP based on breakpoint (900px, 640px, 300px) */
    aspect-ratio: 1 / 1; /* Ensures it's always a perfect square */
    perspective: 1200px; /* As specified in prompt */
    
    position: relative; 
    overflow: hidden; 
    will-change: transform, opacity;
    border: none;
    
    /* Initial state for GSAP animation */
    opacity: 0; 
    transform: scale(0.8); 
    visibility: hidden; /* Start hidden for controlled GSAP reveal */

    display: flex;
    justify-content: center; /* IMPORTANT: Center the cube visually within its own container */
    align-items: center;
    align-self: center; /* IMPORTANT: Center the cube-container horizontally within the section */
    
    z-index: 1; /* Cube is behind the heading */
    margin-top: 20px; /* IMPORTANT: Extra spacing if needed */
    
    max-width: 900px; /* IMPORTANT: Prevent over-stretching */
    width: 100%;     /* IMPORTANT: Responsive width */
}

.cube {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d; /* As specified in prompt */
    transform: rotateX(0deg); /* Initial state for dynamic rotateX flip, GSAP will control */
    will-change: transform;
    overflow: hidden; /* Added overflow: hidden as safeguard */
    /* No transition here, GSAP will apply transform directly */
}

.face {
    position: absolute;
    width: 100%;
    height: 100%; /* Each face must match container height, as specified */
    border: none;
    background: var(--bg-gradient-2); /* Using defined variable */
    color: var(--text-light); /* Light text color */
    padding: clamp(1rem, 4vw, 2.5rem); /* Responsive padding with clamp */
    display: flex; /* As specified in prompt */
    flex-direction: column;
    justify-content: center; /* Vertically centers content block, as specified */
    align-items: flex-start; /* Align content to the left within face, as specified */
    backface-visibility: hidden; /* As specified in prompt */
    will-change: transform, opacity;
    box-sizing: border-box;
    text-align: left; /* Ensure text inside face respects alignment */
    box-shadow: var(--shadow-strong); /* Using defined variable */
    
    /* Initial state for GSAP animation - only the active face will be visible */
    opacity: 0; 
    visibility: hidden; 
    border-radius: 15px; /* Added from proposed CSS */
}

/* Styling for content within the face */
.service-content {
    width: 100%; /* Take full width of face padding */
    flex-grow: 1; /* Allow content to grow and push face-number to bottom */
    display: flex;
    flex-direction: column;
    justify-content: center; /* Center title/description vertically */
    align-items: flex-start; /* Align title/description horizontally */
    text-align: left;
}

.service-title {
    font-size: clamp(1rem, 1.8vw, 1.8rem); /* Responsive title font size */
    font-weight: 700;
    margin-bottom: clamp(0.5rem, 1vw, 1rem); /* Responsive margin */
    line-height: 1.2;
    color: var(--cube-service-title-color); /* Using defined variable */
}

.service-description {
    text-align: left; /* As specified in prompt */
    line-height: 1.4; /* As specified in prompt */
    word-spacing: 1px;
    font-size: clamp(0.875rem, 1.2vw, 1rem); /* Responsive description font size */
    color: var(--text-medium);
    max-width: 100%;
}

.face-number {
    position: absolute; /* As specified in prompt */
    bottom: clamp(1rem, 2vw, 1.5rem); /* Responsive position */
    right: clamp(1rem, 2vw, 1.5rem);  /* Responsive position */
    font-size: clamp(3rem, 10vw, 6rem); /* Responsive font size */
    font-weight: 500;
    color: rgba(255, 255, 255, 0.08); /* As specified in prompt */
    pointer-events: none;
    z-index: 0;
    line-height: 1;
}

/* --- Responsive adjustments for the services section --- */
@media (max-width: 1200px) {
    .services-section {
        gap: 40px; /* Adjusted gap for smaller screens */
        padding: 80px 40px;
    }
}

@media (max-width: 768px) {
    .services-section {
        flex-direction: column; /* Stack heading and cube */
        height: auto; /* Allow height to adjust for stacked content */
        min-height: 100vh; /* Ensure it still takes up space */
        padding: 60px 20px; /* Adjust padding */
        gap: 30px; /* Spacing between stacked items */
        text-align: center; /* Center text for stacked layout */
    }
    .services-heading {
        align-self: center; /* Center heading when stacked */
        text-align: center;
        height: auto; /* Allow content to dictate height */
        z-index: auto; /* Reset z-index */
    }
    .cube-container {
        position: relative; /* Disable sticky on mobile */
        top: auto; 
        transform: none; 
        height: auto; /* Allow it to scale */
        margin: 0 auto;
        min-height: 300px; /* Ensure min-height */
        align-self: center; /* Keep centered when stacked */
    }
    .cube { 
        transform-style: flat; /* Ensure flat for stacking */
        transform: none; /* Reset any GSAP transform initially */
        display: flex;
        flex-direction: column;
        gap: 20px;
        height: auto;
    }
    .face {
        padding: 1rem;
        justify-content: center;
        align-items: center;
        text-align: center;
        position: relative; /* Make faces static on mobile */
        transform: none; /* Reset face transforms */
        opacity: 1; /* All faces visible by default in stacked mode */
        visibility: visible;
        height: auto; /* Allow content to dictate height */
    }
    .service-content {
        justify-content: center;
        align-items: center;
        text-align: center;
    }
    .service-title, .service-description {
        text-align: center;
    }
    .face-number {
        position: relative; /* Make number flow with content */
        bottom: auto;
        right: auto;
        font-size: 0.8em;
        color: var(--text-medium);
        margin-top: 10px;
        align-self: flex-end;
    }
}

@media (max-width: 480px) {
    .services-section {
        gap: 20px;
        padding: 40px 15px;
    }
    .cube-container {
        min-height: 200px; /* Ensure min-height */
    }
    .face {
        padding: 0.8rem;
    }
}

/* --- Accessibility: Reduced motion override (GSAP also handles this directly) --- */
@media (prefers-reduced-motion: reduce) {
    /* Global reveals */
    .reveal-item,
    .reveal-parent .reveal-child,
    .reveal-stagger-container .reveal-stagger,
    .tool-card {
        transition: none !important;
        transform: none !important;
        opacity: 1 !important;
        animation: none !important;
        visibility: visible !important;
    }
    
    /* Services section specific overrides for reduced motion */
    /* GSAP's matchMedia takes priority, but these serve as a CSS-only fallback */
    #services-pin-wrapper { 
        height: auto !important; 
        position: relative !important;
    }
    .services-section { 
        position: relative !important;
        top: auto !important;
        left: auto !important;
        transform: none !important;
        height: auto !important;
        min-height: auto !important;
        padding: 80px 40px !important; 
        pointer-events: auto !important;
        flex-direction: column !important; 
        justify-content: flex-start !important;
        align-items: center !important;
        gap: 20px !important; 
        opacity: 1 !important; 
        visibility: visible !important;
    }
    .services-heading, .cube-container { /* Target both direct children */
        flex-basis: auto !important; /* Allow stacking */
        max-width: 100% !important;
        height: auto !important;
        padding-right: 0 !important;
        margin-bottom: 20px !important; 
        justify-content: center !important; 
        align-items: center !important;
        text-align: center !important;
        z-index: auto !important;
        align-self: center !important; /* Ensure centered */
    }
    .services-heading {
        text-align: center !important;
    }

    .cube-container {
        perspective: none !important; 
        transform: none !important; 
        height: auto !important;
        margin: 0 auto !important;
        position: relative !important;
        top: auto !important;
        overflow: visible !important;
        max-width: 100% !important;
        z-index: auto !important;
        aspect-ratio: auto !important; 
    }
    .cube {
        transform-style: flat !important; 
        transform: none !important;
        transition: none !important;
        display: flex;
        flex-direction: column;
        gap: 20px;
        height: auto;
    }
    .face {
        transition: none !important;
        opacity: 1 !important;
        visibility: visible !important;
        position: relative !important;
        transform: none !important;
        height: auto !important;
        justify-content: center !important; 
        align-items: center !important;
        text-align: center !important;
        padding: 1rem !important; 
        box-shadow: none !important; 
        background: var(--bg-tool-card) !important; 
    }
    .face .service-content {
        justify-content: center !important;
        align-items: center !important;
        text-align: center !important;
    }
    .face .service-title {
        color: var(--text-light) !important; 
    }
    .face .service-description {
        text-align: center !important;
    }
    .face .face-number {
        position: relative !important;
        bottom: auto !important;
        right: auto !important;
        font-size: 0.8em !important;
        color: var(--text-medium) !important;
        margin-top: 10px;
        align-self: flex-end !important;
    }
}

/* --- Reverted "Let's Connect" Section CSS --- */
footer#contact {
    background-color: var(--bg-section-card); /* Dark background */
    color: var(--text-light);
    padding: 100px 40px;
    text-align: center;
}

footer h2 { /* Original h2 style */
    font-family: 'Poppins', sans-serif;
    text-align: center;
    margin-bottom: 25px;
    font-size: 3.2em;
    color: var(--primary-heading-color);
    font-weight: 700;
    letter-spacing: 1.5px;
    text-shadow: 2px 2px 6px rgba(0,0,0,0.7); /* Restore text shadow */
}

.contact-tagline {
    font-size: 1.1rem; /* Specific font size */
    margin-bottom: 40px;
    color: var(--text-medium); /* Specific text color */
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
    line-height: 1.8;
    opacity: 0.95;
}

.contact-buttons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px; /* Gap between buttons */
    margin-bottom: 40px;
}

.contact-button {
    background-color: var(--bg-profile-card); /* White background for buttons */
    color: var(--text-dark-card); /* Dark text for buttons */
    padding: 15px 25px; /* Specific padding */
    border: none;
    border-radius: 10px; /* Rounded corners */
    font-size: 1rem; /* Specific font size */
    display: flex; /* Flex container for icon/text */
    flex-direction: row; /* Icon and text side-by-side */
    align-items: center;
    justify-content: center; /* Center content horizontally */
    gap: 8px; /* Gap between icon and text */
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    cursor: pointer;
    transition: all 0.3s ease;
    width: auto; /* Allow content to dictate width */
    height: auto; /* Allow content to dictate height */
    position: relative; /* For copied state */
    overflow: hidden; /* For copied state transition */
}

.contact-button:hover {
    transform: translateY(-2px); /* Subtle lift on hover */
    box-shadow: 0 8px 25px rgba(0,0,0,0.3);
}

.contact-button i { /* Icon styling */
    font-size: 1.5em; /* Smaller icon for compact button */
    color: var(--accent-primary-sawad); /* Orange accent */
}

.contact-button .button-value {
    font-size: 1em; /* Adjusted to fit better */
    font-weight: 600;
    color: var(--text-dark-card); /* Dark text */
    white-space: nowrap; /* Prevent wrapping */
    overflow: hidden;
    text-overflow: ellipsis;
    padding: 0;
    margin: 0;
    max-width: none;
}

.contact-button .copied-text {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background: var(--accent-primary-sawad); /* Solid orange, not gradient */
    color: var(--text-light);
    font-size: 1.2em; /* Adjusted font size */
    font-weight: bold;
    border-radius: 10px;
    opacity: 0;
    transform: translateY(100%);
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1), opacity 0.3s cubic-bezier(0.22, 1, 0.36, 1);
    text-shadow: 1px 1px 3px rgba(0,0,0,0.5);
    z-index: 3;
}

/* States when button is 'copied' (keep as is) */
.contact-button.copied .button-content-main {
    transform: translateY(-100%) !important;
    opacity: 0 !important;
}

.contact-button.copied .copied-text {
    transform: translateY(0) !important;
    opacity: 1 !important;
}
.social-links { /* Restore social links styling if needed */
    margin-top: 30px;
}
.social-links a {
    color: var(--text-light);
    margin: 0 20px;
    transition: color 0.3s cubic-bezier(0.22, 1, 0.36, 1), transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
}
.social-links a:hover {
    color: var(--accent-secondary-sawad);
    transform: scale(1.3);
}

/* --- Reverted "Premium Tools" Section CSS --- */
.tools-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* Adjusted minmax for better fit */
    gap: 20px; /* Increased gap for more spacing */
    margin: 60px auto; /* Center the grid */
    max-width: 900px; /* Max width for the grid */
    padding: 0;
    justify-items: stretch;
}

.tool-card {
    background: linear-gradient(145deg, #1c1c1c, #121212); /* Glossy gradient background */
    border-radius: 15px;
    padding: 25px; /* Increased padding */
    display: flex;
    align-items: center;
    gap: 20px; /* Increased gap */
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.4); /* Deeper shadow */
    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Elegant hover transition */
    cursor: pointer;
    will-change: transform, opacity; /* Keep for reveal animation */
    /* Remove opacity/transform for reveal if already handled by reveal-stagger */
}

.tool-card:hover {
    transform: translateY(-6px); /* More pronounced lift */
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.6); /* Even deeper shadow on hover */
    background: linear-gradient(145deg, #2a2a2a, #1a1a1a); /* Slightly lighter on hover */
}

.tool-icon-wrapper { /* Keep existing styling */
    width: 50px;
    height: 50px;
    background-color: var(--tool-icon-bg);
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-shrink: 0;
    overflow: hidden;
}

.tool-logo { /* Keep existing styling */
    max-width: 70%;
    max-height: 70%;
    object-fit: contain;
    filter: brightness(0.01);
}

.tool-info { /* Keep existing styling */
    flex-grow: 1;
    text-align: left;
}

.tool-name { /* Keep existing styling */
    font-size: 1.1em;
    font-weight: 600;
    color: var(--tool-name-color);
    margin: 0 0 5px 0;
    line-height: 1.2;
}

.tool-category { /* Keep existing styling */
    font-size: 0.85em;
    color: var(--tool-category-color);
    margin: 0;
    line-height: 1.2;
}

/* Responsive adjustments for tools grid */
@media (max-width: 1200px) {
    .tools-grid {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        max-width: 600px;
        gap: 15px;
    }
    .tool-card {
        padding: 20px;
        gap: 15px;
    }
}

@media (max-width: 768px) {
    .tools-grid {
        grid-template-columns: 1fr; /* Single column on mobile */
        max-width: 400px;
        gap: 15px;
    }
    .tool-card {
        padding: 18px;
        gap: 12px;
    }
}

@media (max-width: 480px) {
    .tools-grid {
        gap: 10px;
    }
    .tool-card {
        padding: 15px;
        gap: 10px;
    }
}
/* No changes needed for the reduced motion block in CSS, it's comprehensive */
