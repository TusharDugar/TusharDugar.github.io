/* style.css */

/* Basic Reset & Font */
:root {
    /* Sawad-inspired Color Palette */
    --bg-main: #000000; /* Solid black background from Sawad */
    --bg-section-card: #141414; /* Background for cards/sections (if added back) */
    --bg-profile-card: #FFFFFF; /* White background for the About Me card */
    --text-light: #F0F0F0; /* Light text for readability */
    --text-medium: #A0A0A0; /* Slightly darker light for secondary text */
    --text-dark-card: #000000; /* Black text for white card background */
    --text-medium-card: #4B4B4B; /* Dark gray for secondary text on white card */
    
    /* Accent Colors from Sawad */
    --accent-primary-sawad: #FF6B00; /* Main orange from Sawad */
    --accent-secondary-sawad: #00FFC2; /* Green accent from Sawad */
    
    /* Gradients */
    --gradient-hero-text: linear-gradient(90deg, #F0F0F0 0%, #A0A0A0 100%); /* Light gradient for hero text (for stats if added back) */
    --gradient-skills-front: linear-gradient(214.02deg, #EA5F5F 6.04%, #EEAA55 92.95%); /* Your specified orange gradient for skill cards (if added back) */

    --primary-heading-color: var(--text-light);
    --shadow-color-dark: rgba(0, 0, 0, 0.8); /* Darker shadow for depth */
    --shadow-color-subtle: rgba(0, 0, 0, 0.4); /* Subtle shadow for blending */
    --shadow-color-card-white: rgba(0,0,0,0.25); /* Specific shadow for white card */

    /* New colors for Tool Cards */
    --bg-tool-card: #1A1A1A; /* Dark background for tool cards */
    --tool-icon-bg: #F8F8F8; /* Adjusted to a slightly off-white for tool icons, closer to Sawad */
    --tool-name-color: var(--text-light); /* White for tool names */
    --tool-category-color: var(--text-medium); /* Gray for categories */

    /* New color for grey headings (re-introduced) */
    --text-sub-heading-grey: #666666; /* Distinct grey color for headings */
}

/* Universal Box-Sizing for easier layout management */
*, *::before, *::after {
  box-sizing: border-box;
}

body {
    margin: 0;
    font-family: 'Poppins', sans-serif;
    line-height: 1.6;
    color: var(--text-light);
    background-color: var(--bg-main); /* Base black background color */
    overflow-x: hidden;
    position: relative;
    scroll-behavior: smooth;
    min-height: 100vh;
}

/* New: Repeating Image Background Container */
.site-background-image {
    position: fixed;
    inset: 0; /* Shorthand for top:0; right:0; bottom:0; left:0; */
    z-index: -2; /* Above body's background-color, but below other overlays */
    pointer-events: none;
    opacity: 0.079; /* Adjusted opacity to 7.9% */
    background-image: url('./71976 (1).jpg'); /* Your specified image, explicit current directory */
    background-repeat: repeat; /* To stack */
    background-size: 400px auto; /* A tile size that creates visible repetition (roughly 4-5 times horizontally) */
}

/* NEW: Animated Color Gradient Overlay */
.background-color-gradient {
    position: fixed;
    inset: 0;
    z-index: -2; /* Above .site-background-image, below color glows */
    pointer-events: none;
    opacity: 0.05; /* Adjusted opacity to 5% */
    background-image: linear-gradient(-45deg,#ee7752,#e73c7e,#23a6d5,#23d5ab,#9600FF,#aebaf8,#bb73e0,#c1fcd3); /* New gradient */
    background-size: 400% 400%;
    animation: gradient 15s ease infinite; /* New animation */
}

/* Keyframes for the new animated colorful gradient */
@keyframes gradient {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}


/* Subtle Background Glowing Elements (Mimicking Sawad's subtle ambient light) */
/* These are the fixed, large, subtle color glows */
body::before, body::after {
    content: '';
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    filter: blur(400px); /* FURTHER INCREASED BLUR */
    opacity: 0.03; /* FURTHER DECREASED OPACITY */
    z-index: -1; /* Above .background-color-gradient, below html::before (grid) */
    pointer-events: none;
    will-change: transform, opacity;
}

body::before {
    width: 1300px; /* Larger */
    height: 1300px; /* Larger */
    background: radial-gradient(circle at center, var(--accent-primary-sawad) 0%, transparent 60%);
    animation: glow1 25s infinite alternate ease-in-out;
}

body::after {
    width: 1200px; /* Larger */
    height: 1200px; /* Larger */
    background: radial-gradient(circle at center, var(--accent-secondary-sawad) 0%, transparent 60%);
    animation: glow2 28s infinite alternate-reverse ease-in-out;
}

@keyframes glow1 {
    0% { transform: translate(-50%, -50%) scale(1); opacity: 0.03; }
    50% { transform: translate(-55%, -45%) scale(1.05); opacity: 0.05; } /* Adjusted max opacity */
    100% { transform: translate(-45%, -55%) scale(1); opacity: 0.03; }
}

@keyframes glow2 {
    0% { transform: translate(-50%, -50%) scale(1); opacity: 0.03; }
    50% { transform: translate(-45%, -55%) scale(1.03); opacity: 0.05; } /* Adjusted max opacity */
    100% { transform: translate(-55%, -45%) scale(1); opacity: 0.03; }
}


/* Animated Background Grid Pattern (now only the mask, gradient moved to new div) */
html::before {
    content: '';
    position: fixed;
    inset: 0;
    z-index: 0; /* Above color glows, below main content */
    pointer-events: none;
    opacity: 0.02; /* UPDATED: Increased opacity for better visibility */
    
    /* TWEAKED LINE THICKNESS & SEGMENTATION */
    mask-image:
        linear-gradient(to right, transparent 99.85%, white 0.15%), /* Even thinner vertical lines */
        linear-gradient(to bottom, transparent 99.85%, white 0.15%), /* Even thinner horizontal lines */
        linear-gradient(45deg, transparent 75%, white 75.02%, white 75.18%, transparent 75.2%), /* Extremely thin diagonal grid 1 */
        linear-gradient(-45deg, transparent 75%, white 75.02%, white 75.18%, transparent 75.2%); /* Extremely thin diagonal grid 2 */

    -webkit-mask-image:
        linear-gradient(to right, transparent 99.85%, white 0.15%),
        linear-gradient(to bottom, transparent 99.85%, white 0.15%),
        linear-gradient(45deg, transparent 75%, white 75.02%, white 75.18%, transparent 75.2%),
        linear-gradient(-45deg, transparent 75%, white 75.02%, white 75.18%, transparent 75.2%);

    /* ADJUSTED MASK SIZES for even denser pattern */
    mask-size: 40px 40px, 40px 40px, 40px 40px, 40px 40px; /* Adjusted from 50px */
    -webkit-mask-size: 40px 40px, 40px 40px, 40px 40px, 40px 40px;

    mask-repeat: repeat;
    -webkit-mask-repeat: repeat;
}

/* Mouse Follower Glow Element (new implementation for mouse tracking) */
.mouse-follower-glow {
    position: fixed;
    top: 0; /* Will be dynamically set by JS */
    left: 0; /* Will be dynamically set by JS */
    width: 80px; /* Size of the glow */
    height: 80px; /* Size of the glow */
    border-radius: 50%;
    background: radial-gradient(circle at center, rgba(255, 107, 0, 0.15) 0%, transparent 60%); /* Subtle orange glow */
    filter: blur(50px); /* Soft blur */
    z-index: 100; /* Ensure it's above all content */
    pointer-events: none; /* Crucial so it doesn't block clicks/interactions */
    /* Add a small transition for smoothness when mouse moves */
    transition: transform 0.1s ease-out; /* Smooth transition for position updates */
    will-change: transform; /* Performance hint */
}


/* Global Section Styling */
.section {
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
  padding: 80px 40px; /* Reduced from 200px for tighter spacing */
}

/* Reveal Animation Base */
.reveal-item {
    opacity: 0;
    transform: translateY(40px);
    transition: opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1), transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform, opacity;
}
.reveal-item.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Stagger Parent (for elements like About section) */
.reveal-parent {
    position: relative;
}

/* Stagger Child (for elements inside About section) */
.reveal-child {
    opacity: 0;
    transform: translateY(20px); /* Reduced from 60px to prevent clipping by overflow:hidden parents */
    transition: opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1), transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform, opacity;
}
.reveal-child.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Stagger Container (for elements like Tools/Contact) */
.reveal-stagger-container {
    position: relative;
}

/* Stagger Item (for elements inside Tools/Contact containers) */
.reveal-stagger {
    opacity: 0;
    transform: translateY(60px);
    transition: opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1), transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform, opacity;
}
.reveal-stagger.visible {
    opacity: 1;
    transform: translateY(0);
}


/* Main Layout Container */
.main-layout-container {
    display: flex;
    justify-content: center; /* Center the entire two-column layout */
    max-width: 1920px; /* Overall max width of the site */
    margin: 0 auto; /* Center the main layout container itself */
    padding: 0 60px; /* Overall padding for the site */
    min-height: 100vh;
    position: relative;
    z-index: 1;
    padding-top: 20px;
    gap: 60px; /* Gap between left and right columns */
}

/* Left Column Sticky Styling */
.left-column-sticky {
    flex-shrink: 0;
    flex-basis: 370px; /* Fixed width for the left column */
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center; /* Centers content horizontally within the column */
    justify-content: center; /* Centers content vertically within the column's height */
    text-align: center;
    z-index: 2;
    
    /* Default (Mobile/Tablet) positioning */
    position: relative;
    top: auto;
    transform: none; /* No vertical translate by default */
    margin: 50px auto 0 auto; /* Horizontally center as a block, push down a bit */
    height: auto; /* Content dictates height */
    padding-right: 0; /* Remove unnecessary padding */
}

/* Desktop-specific rules for left column (fixed and centrally aligned within its allocated space) */
@media (min-width: 1024px) {
    .main-layout-container {
        align-items: flex-start; /* Align to top to allow sticky to work properly */
    }
    .left-column-sticky {
        position: sticky; /* Make it sticky */
        top: 50%; /* Start sticky behavior from the middle of the viewport */
        transform: translateY(-50%); /* Adjust upwards by half its height for true vertical centering */
        height: calc(100vh - 100px); /* Give it a defined height so justify-content: center has room to work */
        margin: 0; /* Remove auto margins */
        align-self: flex-start; /* It needs to be flex-start in the parent for sticky to work correctly with top property */
    }
}


/* About Left Content (White Card) */
.about-left-content {
    background-color: var(--bg-profile-card);
    color: var(--text-dark-card);
    border-radius: 20px;
    padding: 30px 25px;
    box-shadow: 0 10px 30px var(--shadow-color-card-white);
    width: 100%;
    max-width: 370px;
    height: auto;
    box-sizing: border-box;

    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    position: relative;
    overflow: hidden;
}

/* Profile Image Container */
.profile-image-container {
    width: calc(100% + 50px);
    max-width: 420px;
    height: 200px;
    border-radius: 15px;
    overflow: hidden;
    margin-bottom: 25px;
    position: relative;
    transform: translateX(0);
    background-color: var(--accent-primary-sawad);
}
.profile-image-container .profile-photo {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center top;
    filter: brightness(0.01);
}

/* Main Name */
.about-left-content h3 {
    font-family: 'Poppins', sans-serif;
    font-size: 2.8em;
    font-weight: 700;
    color: var(--text-dark-card);
    margin-bottom: 20px;
    line-height: 1.1;
}

/* Fire Icon with connecting dashed lines */
.fire-icon-with-line {
    position: relative;
    width: 100%;
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 25px;
}

.fire-icon {
    background-color: var(--accent-primary-sawad);
    border-radius: 50%;
    padding: 8px;
    font-size: 1.1em;
    color: var(--text-light);
    box-shadow: 0 2px 8px rgba(0,0,0,0.5);
    z-index: 2;
    position: relative;
}

.fire-icon-with-line::before,
.fire-icon-with-line::after {
    content: '';
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    height: 2px;
    border-top: 2px dashed var(--accent-primary-sawad);
    z-index: 1;
}

.fire-icon-with-line::before {
    left: 0;
    width: calc(50% - 25px);
}

.fire-icon-with-line::after {
    right: 0;
    width: calc(50% - 25px);
}

/* Decorative background dashed lines */
.dashed-decoration {
    position: absolute;
    border: 2px dashed var(--accent-primary-sawad); /* Color set to orange */
    border-radius: 50%;
    box-sizing: border-box;
    pointer-events: none;
    z-index: 0;
}

.top-left-curve {
    width: 150px;
    height: 150px;
    top: -50px;
    left: -50px;
    /* FIXED: Flipped to show right and bottom borders, making it curve inwards */
    border-top-color: transparent; 
    border-left-color: transparent;
    transform: rotate(-10deg);
}

.bottom-right-curve {
    width: 150px;
    height: 150px;
    bottom: -50px;
    right: -50px;
    /* FIXED: Flipped to show top and left borders, making it curve inwards */
    border-bottom-color: transparent;
    border-right-color: transparent;
    transform: rotate(10deg);
}

/* Short Description */
.about-short-desc {
    text-align: center; /* Centrally aligned */
    line-height: 1.8; /* Better line spacing */
    word-spacing: 1px; /* Better word spacing */
    font-size: 0.9em;
    color: var(--text-medium-card);
    margin-bottom: 25px;
    padding: 0 5px;
    max-width: 90%;
}

/* Social Icons */
.about-social-icons {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-top: auto;
    padding-top: 10px;
}
.about-social-icons a {
    color: var(--accent-primary-sawad);
    font-size: 1.5em;
    transition: color 0.3s cubic-bezier(0.22, 1, 0.36, 1), transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
}
.about-social-icons a:hover {
    color: var(--accent-primary-sawad);
    transform: translateY(-2px) scale(1.05);
}


/* Right Column (Scrolling) */
.right-column-scroll {
    flex-grow: 1;
    padding-bottom: 100px;
    box-sizing: border-box;
    min-height: 150vh;
    padding-top: 50px;
    text-align: left;
    position: relative;
    z-index: 0;
}

/* Specific text alignment for elements within right-column-scroll */
.right-column-scroll h1,
.right-column-scroll h2,
.right-column-scroll p {
  margin-left: 0;
  margin-right: 0;
}

/* HERO TEXT ADJUSTMENTS */
.hero-heading {
    font-family: 'Poppins', sans-serif;
    font-size: 7.75em; /* UPDATED: Changed to 7.75em */
    line-height: 0.75em;
    font-weight: 900;
    margin-bottom: 20px;
    text-transform: uppercase;
    text-align: left;
    margin-left: 0;
    background: none;
    -webkit-background-clip: unset;
    background-clip: unset;
    -webkit-text-fill-color: unset;
    color: unset;
}
.hero-heading .crafting {
  color: #ffffff;
}

.hero-heading .digital {
  color: var(--text-sub-heading-grey); /* Applied specific sub-heading grey color */
}

/* HERO DESCRIPTION ADJUSTMENTS */
.hero-description {
    text-align: justify; /* Justify text */
    line-height: 1.8; /* Better line spacing */
    word-spacing: 1px; /* Better word spacing */
    font-size: 1em;
    margin-bottom: 40px; /* Adjust hero text spacing */
    max-width: 90%; /* Adjust hero text spacing */
    color: var(--text-medium);
}


/* Services Section Wrapper (for pinning) */
#services-pin-wrapper {
    height: 800vh; /* This creates the scroll area for pinning the services section */
    position: relative;
    width: 100%;
}

/* Services Section Styles (Two-Column Layout & Manual Pinning) */
.services-section {
    position: sticky; /* UPDATED: Now sticky as per prompt */
    top: 0; /* UPDATED: Pin to top as per prompt */
    height: 100vh; /* UPDATED: As per prompt */
    display: flex; /* UPDATED: As per prompt */
    align-items: center; /* UPDATED: As per prompt */
    justify-content: space-between; /* UPDATED: As per prompt */
    max-width: 1200px; /* UPDATED: Constrain max-width per prompt */
    margin: 0 auto; /* UPDATED: Center horizontally per prompt */
    z-index: 2;
    background-color: transparent; /* Keep background transparent */
    padding: 100px 20px; /* UPDATED: Adjusted padding per prompt example */
    box-sizing: border-box;
    gap: 60px; /* UPDATED: Added gap between columns as per prompt */
}

/* The .is-pinned class is no longer strictly needed for pinning itself as it's sticky,
   but it's left in place for consistency with JS state management if it affects other things.
   Its fixed positioning is now overridden by the section's sticky property. */
.services-section.is-pinned {
    /* These properties are largely managed by the sticky parent now,
       but retained for completeness or if JS changes state for other reasons. */
    /* position: fixed; */
    /* top: 0; */
    /* left: 50%; */
    /* width: 100%; */
    /* transform: translateX(-50%); */
    /* z-index: 10; */
    /* padding: 0 60px; */
}


/* Left Column of Services Section */
.services-left-column {
    flex-basis: 45%; /* Adjust width for left column */
    max-width: 500px;
    display: flex;
    flex-direction: column;
    justify-content: center; /* UPDATED: Vertically center content within its column */
    align-items: flex-start; /* Align text to the start */
    text-align: left; /* Align text to the left */
    height: 100%; /* UPDATED: Take full height to allow internal centering */
    padding-right: 20px; /* Space between columns */
    box-sizing: border-box;
}

/* Right Column of Services Section */
.services-right-column {
    flex-basis: 50%; /* Adjust width for right column */
    max-width: 500px;
    display: flex; /* UPDATED: Make it a flex container to center the cube */
    justify-content: center; /* UPDATED: Horizontally center cube within its column */
    align-items: center; /* UPDATED: Vertically center cube within its column */
    height: 100%; /* Take full height of parent flex container */
    box-sizing: border-box; 
}


/* Services Main Title */
.services-heading {
    font-family: 'Poppins', sans-serif;
    font-size: clamp(2.5rem, 8vw, 8rem); /* UPDATED: Clamp for responsive scaling */
    line-height: 0.75em;
    font-weight: 800;
    margin-bottom: 20px; /* Adjusted margin */
    text-transform: uppercase;
    text-align: left; /* UPDATED: Left-aligned heading */
    position: relative;
    z-index: 4;
    padding: 0;
    width: 100%;
    max-width: 1200px;
}
.services-heading .text-white { color: var(--text-light); display: block; }
.services-heading .text-gray { color: var(--text-sub-heading-grey); display: block; } /* Applied specific sub-heading grey color */

.services-description {
    font-size: clamp(0.875rem, 1.2vw, 1rem); /* Responsive font size */
    line-height: 1.4;
    color: var(--text-medium);
    text-align: left;
    max-width: 100%;
}


/* --- 3D Cube Animation Styles (RESTORED & MODIFIED for rotateX) --- */
.cube-container {
    width: 100%;
    max-width: 500px; /* UPDATED: Adjusted max-width as per prompt example */
    height: 300px; /* UPDATED: Adjusted height as per prompt example */
    margin: 0 auto; /* Centered with margin auto within its flex parent */
    perspective: 1200px; /* UPDATED: Adjusted perspective */
    position: sticky; /* UPDATED: Sticky for right-column pinning as per prompt */
    top: 50%; /* UPDATED: For vertical centering with sticky as per prompt */
    transform: translateY(-50%); /* UPDATED: For vertical centering with sticky as per prompt */
    overflow: hidden; /* Important for clipping rotating elements */
    will-change: transform, opacity;
    border: none;
}

.cube {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 1200ms cubic-bezier(0.645, 0.045, 0.355, 1); /* UPDATED: Easing from prompt */
    transform: rotateX(0deg); /* Initial state for dynamic rotateX flip. No static tilt here. */
    will-change: transform;
}

.face {
    position: absolute;
    width: 100%;
    height: 100%; /* Each face must match container height */
    border: none; /* No border on faces for clean look */
    background-color: var(--bg-tool-card);
    color: var(--text-light);
    padding: 2rem; /* UPDATED: Base padding as per prompt */
    display: flex;
    flex-direction: column;
    justify-content: center; /* UPDATED: Vertically centers content block */
    align-items: flex-start; /* UPDATED: Align content to the left within face */
    backface-visibility: hidden;
    will-change: transform, opacity;
    box-sizing: border-box; /* Ensure padding is included in height */
    text-align: left; /* UPDATED: Ensure text inside face respects alignment */
}

/* Styling for content within the face */
.service-content {
    width: 100%; /* Take full width of face padding */
    flex-grow: 1; /* Allow content to grow and push face-number to bottom if needed */
    display: flex;
    flex-direction: column;
    justify-content: center; /* UPDATED: Center title/description vertically if they don't take full space */
    align-items: flex-start; /* UPDATED: Align title/description horizontally */
    text-align: left;
}

.service-title {
    font-size: clamp(1rem, 2.5vw, 1.5rem); /* UPDATED: Applied clamp for responsiveness as per prompt */
    font-weight: 700;
    margin-bottom: 0.5rem; /* UPDATED: Adjusted margin */
    line-height: 1.2;
    color: #9CFF33; /* UPDATED: Set color to #9CFF33 as per prompt */
}

.service-description {
    text-align: left; /* UPDATED: Left-aligned description text */
    line-height: 1.4; /* UPDATED: Tighter line spacing */
    word-spacing: 1px;
    font-size: clamp(0.9rem, 2vw, 1.25rem); /* UPDATED: Applied clamp for responsiveness as per prompt */
    color: var(--text-medium);
    max-width: 100%;
}

.face-number {
    position: absolute;
    bottom: 1rem; /* UPDATED: Positioned from bottom */
    right: 1rem;  /* UPDATED: Positioned from right */
    font-size: clamp(4rem, 15vw, 10rem); /* UPDATED: Applied clamp, adjusted values as per prompt */
    font-weight: 500;
    color: #262626; /* UPDATED: Changed color as per prompt */
    pointer-events: none;
    z-index: 0;
    line-height: 1;
}

/* Responsive adjustments for 3D cube on different devices */
@media (max-width: 1200px) {
    .services-section.is-pinned {
        padding: 0 40px; /* Adjust fixed padding for medium screens */
    }
    .services-left-column {
        flex-basis: 40%; /* Adjust width */
    }
    .services-right-column {
        flex-basis: 55%; /* Adjust width */
    }
    .cube-container {
        max-width: 80%; /* Consistent responsive max-width */
        height: 100%; /* Height scales with parent */
    }
    .face {
        padding: 1.2rem; /* Adjusted padding */
    }
    /* Clamp functions handle responsive font sizing */
    .face-number {
        bottom: 0.8rem;
        right: 0.8rem;
    }
}

@media (max-width: 768px) {
    .services-section {
        flex-direction: column; /* Stack into a single column */
        height: auto; /* Allow height to adjust */
        min-height: 100vh; /* Ensure it still takes up space when not pinned */
        padding: 60px 20px;
        gap: 40px; /* Smaller gap when stacked */
    }
    /* .services-section.is-pinned should effectively mimic the .services-section mobile state */
    .services-section.is-pinned {
        flex-direction: column;
        top: auto; left: auto; transform: none; /* Override fixed positioning for mobile context */
        position: relative; /* Make it flow naturally */
        width: 100%;
        height: auto;
        max-width: 100%;
        padding: 60px 20px;
        margin: 0 auto;
        z-index: 1; /* Not aggressively on top in stacked layout */
    }
    .services-left-column {
        flex-basis: auto; /* Auto width */
        max-width: 100%;
        height: auto;
        padding-right: 0;
        margin-bottom: 0; /* No margin when stacked, gap handles spacing */
        align-items: center; /* Center text block horizontally */
        text-align: center;
    }
    .services-heading, .services-description {
        text-align: center;
    }
    .services-right-column {
        flex-basis: auto; /* Auto width */
        max-width: 100%;
        height: auto; /* Let cube dictate height */
        justify-content: center; /* Ensure cube is centered */
        align-items: center;
    }
    .cube-container {
        position: relative; /* UPDATED: Revert to relative, not sticky, on small screens */
        top: auto;
        transform: none;
        max-width: 80%; /* Adjust max width for mobile */
        height: 400px; /* UPDATED: Fixed height for cube when relative */
        margin: 0 auto; /* Center cube if not sticky */
    }
    .face {
        padding: 1rem; /* Adjusted padding */
        justify-content: center; /* Center text in stacked layout */
        align-items: center;
        text-align: center;
    }
    .service-content {
        justify-content: center;
        align-items: center;
        text-align: center;
    }
    .service-title, .service-description {
        text-align: center;
    }
    .face-number {
        bottom: 0.5rem;
        right: 0.5rem;
    }
}

@media (max-width: 480px) {
    .services-section {
        gap: 30px; /* Smaller gap */
        padding: 40px 15px;
    }
    /* .services-section.is-pinned mobile state already covered by 768px */
    .services-left-column {
        margin-bottom: 0; /* No margin, gap handles spacing */
    }
    .cube-container {
        height: 300px; /* Smaller fixed height for mobile */
    }
    .face { 
        padding: 0.8rem; /* Adjusted padding */
    }
    .face-number {
        bottom: 0.2rem;
        right: 0.2rem;
    }
}


/* Tools Grid Styling (Restored with Stagger) */
.tools-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 15px;
    margin-left: 0;
    margin-right: 0;
    justify-items: stretch;
}

/* Tools Main Title - NEW: Base styles for tools-heading */
.tools-heading {
    font-family: 'Poppins', sans-serif;
    font-size: clamp(2.5rem, 8vw, 8rem); /* UPDATED: Clamp for responsive scaling */
    line-height: 0.75em;
    font-weight: 800;
    margin-bottom: 40px; /* Matching services heading */
    text-transform: uppercase; /* Matching services heading */
    text-align: left; /* Matching services heading */
    margin-left: 0; /* Matching services heading */
    position: relative; /* Matching services heading */
    z-index: 4; /* Matching services heading */
    padding: 0; /* Matching services heading */
    width: 100%; /* Matching services heading */
    max-width: 1200px; /* Matching services heading */
}
/* Ensure text-white and text-gray for tools heading also works */
.tools-heading .text-white { color: var(--text-light); display: block; }
.tools-heading .text-gray { color: var(--text-sub-heading-grey); display: block; }

/* Tool Card (Animations) */
.tool-card {
    background-color: var(--bg-tool-card);
    border-radius: 15px;
    padding: 20px;
    display: flex;
    align-items: center;
    gap: 15px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1), box-shadow 0.3s cubic-bezier(0.22, 1, 0.36, 1), background-color 0.3s cubic-bezier(0.22, 1, 0.36, 1), opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1), transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    cursor: pointer;
    will-change: transform, opacity;

    opacity: 0; /* Default hidden for reveal animation */
    transform: translateY(60px); /* Default position for reveal animation */
}
.tool-card.visible {
  opacity: 1;
  transform: translateY(0);
}

.tool-card:hover {
    transform: translateY(-5px);
    background-color: rgba(26, 26, 26, 0.9);
    box-shadow: 0 8px 20px rgba(0,0,0,0.5);
}

.tool-icon-wrapper {
    width: 50px;
    height: 50px;
    background-color: var(--tool-icon-bg);
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-shrink: 0;
    overflow: hidden;
}

.tool-logo {
    max-width: 70%;
    max-height: 70%;
    object-fit: contain;
    filter: brightness(0.01);
}

.tool-info {

    flex-grow: 1;
    text-align: left;
}

.tool-name {
    font-size: 1.1em;
    font-weight: 600;
    color: var(--tool-name-color);
    margin: 0 0 5px 0;
    line-height: 1.2;
}

.tool-category {
    font-size: 0.85em;
    color: var(--tool-category-color);
    margin: 0;
    line-height: 1.2;
}


/* Footer (Contact Section) */
footer {
    background-color: var(--bg-main);
    color: var(--text-light);
    text-align: center;
    padding: 60px 0;
    position: relative;
    z-index: 1;
}

footer a {
    color: var(--accent-secondary-sawad);
    text-decoration: none;
    transition: text-decoration 0.3s cubic-bezier(0.22, 1, 0.36, 1);
}

footer h2 {
    font-family: 'Poppins', sans-serif;
    text-align: center;
    margin-bottom: 25px;
    font-size: 3.2em;
    color: var(--primary-heading-color);
    font-weight: 700;
    text-shadow: 2px 2px 6px rgba(0,0,0,0.7);
    letter-spacing: 1.5px;
}

.contact-tagline {
    font-size: 1.1em;
    margin-bottom: 40px;
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
    opacity: 0.95;
    line-height: 1.8;
    color: var(--text-light);
}

.contact-buttons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    margin-bottom: 40px;
}

.contact-button {
    background-color: rgba(255, 255, 255, 0.005); /* Very very transparent */
    border: 1px solid rgba(255, 255, 255, 0.01); /* Very very transparent border */
    border-radius: 12px;
    padding: 0;
    font-size: 1.2em; /* Adjusted default font size */
    font-weight: 600;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    width: 280px;
    height: 120px; /* Adjusted default height */
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1), box-shadow 0.3s cubic-bezier(0.22, 1, 0.36, 1), background-color 0.3s cubic-bezier(0.22, 1, 0.36, 1);
    text-align: center;
}

.contact-button:hover {
    transform: translateY(-8px);
    background-color: rgba(26, 26, 26, 0.9);
    box-shadow: 0 10px 25px var(--shadow-color-dark), 0 0 15px var(--accent-secondary-sawad);
}

.contact-button .button-content-main {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1), opacity 0.3s cubic-bezier(0.22, 1, 0.36, 1);
    padding: 15px;
    box-sizing: border-box;
}

.contact-button i {
    font-size: 2.8em;
    color: var(--accent-primary-sawad);
}

.contact-button .button-value {
    font-size: 0.9em; /* FIXED: Reduced font size for better fit */
    font-weight: bold;
    opacity: 1;
    white-space: normal; /* FIXED: Allow text to wrap */
    overflow: hidden; /* Keep hidden if it overflows after wrap */
    text-overflow: ellipsis; /* Keep ellipsis for long single words if needed */
    padding: 0 5px;
    max-width: 90%;
    color: var(--text-light);
    margin-top: 5px;
}

.contact-button .copied-text {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background: var(--accent-primary-sawad); /* Solid orange, not gradient */
    color: var(--text-light);
    font-size: 1.5em;
    font-weight: bold;
    border-radius: 12px;
    opacity: 0;
    transform: translateY(100%);
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1), opacity 0.3s cubic-bezier(0.22, 1, 0.36, 1);
    text-shadow: 1px 1px 3px rgba(0,0,0,0.5);
    z-index: 3;
}

/* States when button is 'copied' */
.contact-button.copied .button-content-main {
    transform: translateY(-100%) !important;
    opacity: 0 !important;
}

.contact-button.copied .copied-text {
    transform: translateY(0) !important;
    opacity: 1 !important;
}

.social-links {
    margin-top: 30px;
}
.social-links a {
    color: var(--text-light);
    margin: 0 20px;
    transition: color 0.3s cubic-bezier(0.22, 1, 0.36, 1), transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
}
.social-links a:hover {
    color: var(--accent-secondary-sawad);
    transform: scale(1.3);
}


/* Accessibility: Reduced motion override */
@media (prefers-reduced-motion: reduce) {
    .reveal-item,
    .reveal-parent .reveal-child,
    .reveal-stagger-container .reveal-stagger,
    .tool-card
    {
        transition: none !important;
        transform: none !important;
        opacity: 1 !important;
        animation: none !important;
        visibility: visible !important; /* Ensure content is visible */
    }
    /* For the 3D cube faces, ensure they are visible and flat if motion is reduced */
    #services-pin-wrapper { /* Hide wrapper as pinning is disabled */
        height: auto !important;
        position: relative !important;
    }
    .services-section { /* Ensure it's static and not fixed/centered */
        position: relative !important;
        top: auto !important;
        left: auto !important;
        transform: none !important;
        height: auto !important;
        min-height: auto !important; /* Allow natural height */
        padding: 80px 40px !important; /* Revert to normal section padding */
        pointer-events: auto !important; /* Ensure interaction */
        flex-direction: column !important; /* Stack columns */
        justify-content: flex-start !important;
        align-items: center !important;
        gap: 20px !important; /* Default gap when stacked */
    }
    .services-left-column, .services-right-column {
        flex-basis: auto !important; /* No fixed flex basis */
        max-width: 100% !important;
        height: auto !important;
        padding-right: 0 !important;
        margin-bottom: 20px !important; /* Space when stacked */
        justify-content: flex-start !important;
        align-items: center !important;
        text-align: center !important;
    }
    .services-heading, .services-description {
        text-align: center !important;
    }

    .cube-container {
        perspective: none !important; /* Flatten the container perspective */
        transform: none !important; /* Remove any static tilt if it were present */
        height: auto !important; /* Allow content to dictate height */
        margin: 0 auto !important; /* Center cube if not sticky */
        position: relative !important; /* Not sticky */
        top: auto !important;
        overflow: visible !important; /* Allow content to overflow if needed in static mode */
        max-width: 100% !important; /* Allow to fill width */
    }
    .cube {
        transform-style: flat !important; /* Flatten the 3D transforms on the cube */
        transform: none !important; /* Remove initial rotation */
        transition: none !important; /* No rotation transitions */
        display: flex; /* Display faces stacked vertically */
        flex-direction: column;
        gap: 20px;
        height: auto; /* Allow height to adjust to content */
    }
    .face {
        transition: none !important;
        opacity: 1 !important; /* All faces visible */
        visibility: visible !important;
        position: relative !important; /* Change from absolute for flex layout */
        transform: none !important; /* Remove all 3D transforms from faces */
        height: auto !important; /* Adjust height based on content in flat mode */
        justify-content: flex-start !important; /* Adjust alignment for stacked layout */
        align-items: flex-start !important; /* Align content to start */
        text-align: left !important; /* Align text to left */
    }
    .face .service-content { /* Adjust service content within face for reduced motion */
        align-items: flex-start !important;
        text-align: left !important;
    }
    .face .service-description {
        text-align: left !important;
    }
    .face .face-number {
        position: relative !important; /* Make face-number flow with content */
        bottom: auto !important;
        right: auto !important;
        font-size: 0.8em !important; /* Smaller, integrated font size */
        color: var(--text-medium) !important; /* More visible color */
        margin-top: 10px; /* Space from description */
        align-self: flex-end !important; /* Align to the end of the flex item */
    }
}
